# Path: fastlabio/pyproject.toml
# -*- coding: utf-8 -*-

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fastlabio"
version = "0.1.0"
authors = [
  { name="Your Name", email="your.email@example.com" }, # Placeholder
]
description = "FastAPI backend for controlling laboratory instruments."
readme = "README.md"
requires-python = ">=3.9"
keywords = ["fastapi", "instrument-control", "pysilico", "plico_motor"]
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    # "License :: OSI Approved :: MIT License", # Deprecated, replaced by license = "MIT"
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
]

# Core dependencies (can also be specified in requirements.txt)
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "pydantic",
    "opencv-python",
    "numpy",
    # For editable installs like pysilico, it's often managed outside pyproject.toml
    # or using specific build backends/plugins. Listing it here requires it to be on PyPI
    # "pysilico", # Uncomment if pysilico is available on PyPI
]

[project.urls]
"Homepage" = "https://github.com/yourusername/fastlabio" # Placeholder
"Bug Tracker" = "https://github.com/yourusername/fastlabio/issues" # Placeholder

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "httpx",
    # Include editable install for pysilico here if needed for dev environment setup
    # e.g., "-e git+https://github.com/ArcetriAdaptiveOptics/pysilico.git@<commit_hash>#egg=pysilico"
]

[tool.pytest.ini_options]
# Add pytest configuration here
# For asyncio tests, explicitly set the loop scope to avoid warnings
# asyncio_mode = "strict" # Already the default, but can be explicit
# asyncio_default_fixture_loop_scope = "function" # Or "session" depending on needs 

[tool.setuptools.packages]
find = { include = ["fastlabio"] } 